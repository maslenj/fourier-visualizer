{"version":3,"sources":["components/InputBar.js","components/DataGraph.js","components/FourierGraph.js","components/MainContent.js","App.js","reportWebVitals.js","index.js"],"names":["InputBar","state","frequency1","frequency2","frequency3","handleChange","bind","event","target","name","value","this","setState","props","setSignalFunction","className","type","onChange","React","Component","DataGraph","canvasId","draw","canvas","document","getElementById","getContext","clearRect","width","height","axes","ctx","x0","y0","scale","doNegativeX","showAxes","funGraph","function","func","color","thick","xx","yy","iMax","Math","round","iMin","beginPath","lineWidth","strokeStyle","i","moveTo","lineTo","abs","font","fillText","stroke","w","h","xmin","id","title","FourierGraph","fourierFrequencies","fourierData","frequencies","data","length","MainContent","inputFunction","x","sin","PI","computeFourier","f1","f2","f3","Complex","require","f","push","presence","t","multiplier","mul","I","exp","im","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.09679ef4.chunk.js","sourcesContent":["import React from \"react\"\n\nclass InputBar extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            frequency1: 1,\n            frequency2: 2,\n            frequency3: 3,\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange(event) {\n        const {name, value} = event.target\n        this.setState({\n            [name]: value\n        },\n        () => {this.props.setSignalFunction(this.state.frequency1, this.state.frequency2, this.state.frequency3)}\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"InputBar\">              \n                <label> Input Frequencies: </label>\n                <input \n                    type=\"number\"\n                    name=\"frequency1\"\n                    value={this.state.frequency1}\n                    onChange={this.handleChange}\n                ></input>\n                <input \n                    type=\"number\"\n                    name=\"frequency2\"\n                    value={this.state.frequency2}\n                    onChange={this.handleChange}\n                ></input>\n                <input \n                    type=\"number\"\n                    name=\"frequency3\"\n                    value={this.state.frequency3}\n                    onChange={this.handleChange}\n                ></input>\n            </div>\n        )\n        \n    }\n}\n\nexport default InputBar","import React from 'react'\n\nclass DataGraph extends React.Component {\n    constructor() {\n        super()\n        this.canvasId = 0\n        this.draw = this.draw.bind(this)\n    }\n\n    draw() {\n        var canvas = document.getElementById(this.canvasId);\n\n        if (null == canvas || !canvas.getContext) return;\n\n        canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height);\n\n        var axes = {}, ctx = canvas.getContext(\"2d\");\n        axes.x0 = .5 + .5 * canvas.width;  // x0 pixels from left to x=0\n        axes.y0 = .5 + .5 * canvas.height; // y0 pixels from top to y=0\n        axes.scale = 100;                 // 40 pixels from x=0 to x=1\n        axes.doNegativeX = true;\n\n        this.showAxes(ctx, axes);\n        this.funGraph(ctx, axes, this.props.function, \"rgb(11,153,11)\", 1);\n    }\n\n    funGraph(ctx, axes, func, color, thick) {\n        var xx, yy, dx = 1, x0 = axes.x0, y0 = axes.y0, scale = axes.scale;\n        var iMax = Math.round((ctx.canvas.width - x0) / dx);\n        var iMin = axes.doNegativeX ? Math.round(-x0 / dx) : 0;\n        ctx.beginPath();\n        ctx.lineWidth = thick;\n        ctx.strokeStyle = color;\n\n        for (var i = iMin; i <= iMax; i++) {\n            xx = dx * i; yy = 0.5 * scale * func(xx / scale);\n            if (i === iMin) ctx.moveTo(x0 + xx, y0 - yy);\n            else ctx.lineTo(x0 + xx, y0 - yy);\n            if (Math.abs((xx / scale)) % 1 < 0.001) {\n                ctx.font = \"10px Arial\";\n                ctx.fillText(Math.round(xx / scale), x0 + xx, y0 + 10);\n            }\n        }\n        ctx.stroke();\n    }\n\n    showAxes(ctx, axes) {\n        var x0 = axes.x0, w = ctx.canvas.width;\n        var y0 = axes.y0, h = ctx.canvas.height;\n        var xmin = axes.doNegativeX ? 0 : x0;\n        ctx.beginPath();\n        ctx.strokeStyle = \"rgb(128,128,128)\";\n        ctx.moveTo(xmin, y0); ctx.lineTo(w, y0);  // X axis\n        ctx.moveTo(x0, 0); ctx.lineTo(x0, h);  // Y axis\n        ctx.stroke();\n    }\n\n    componentDidMount() {\n        this.draw()\n    }\n\n    componentDidUpdate() {\n        this.draw()\n    }\n\n    render() {\n        this.canvasId = \"canvas\" + this.props.id\n        return (\n            <div className=\"DataGraph\">\n                <label>{this.props.title}</label>\n                <canvas id={this.canvasId} width=\"1200\" height=\"300\"></canvas>\n            </div>\n        )\n    }\n}\n\nexport default DataGraph","import React from \"react\"\n\nclass FourierGraph extends React.Component {\n    // Needs fourierFrequencies and fourierData\n\n    draw() {\n        var canvas = document.getElementById(\"fourierCanvas\");\n\n        if (null == canvas || !canvas.getContext) return;\n\n        canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height);\n\n        var axes = {}, ctx = canvas.getContext(\"2d\");\n        axes.x0 = .5 + .05 * canvas.width;  // x0 pixels from left to x=0\n        axes.y0 = .5 + .5 * canvas.height; // y0 pixels from top to y=0\n        axes.scale = 40;                 // 40 pixels from x=0 to x=1\n        axes.doNegativeX = true;\n\n        this.showAxes(ctx, axes);\n        this.funGraph(ctx, axes, this.props.fourierFrequencies, this.props.fourierData, \"rgb(11,153,11)\", 1);\n    }\n\n    funGraph(ctx, axes, frequencies, data, color, thick) {\n        let xx, yy, x0 = axes.x0, y0 = axes.y0\n        let scaleX = 120, scaleY = 15\n        ctx.beginPath()\n        ctx.lineWidth = thick\n        ctx.strokeStyle = color\n        for (let i = 0; i < data.length; i ++) {\n            xx = frequencies[i] * scaleX\n            yy = data[i] * scaleY\n            ctx.lineTo(x0 + xx, y0 - yy);\n            \n            if (frequencies[i] % 1 < 0.01) {\n                ctx.font = \"10px Arial\";\n                ctx.fillText(Math.round(frequencies[i]), x0 + xx, y0 + 10);\n            }\n        }\n        ctx.stroke();\n    }\n\n    showAxes(ctx, axes) {\n        var x0 = axes.x0, w = ctx.canvas.width;\n        var y0 = axes.y0, h = ctx.canvas.height;\n        var xmin = axes.doNegativeX ? 0 : x0;\n        ctx.beginPath();\n        ctx.strokeStyle = \"rgb(128,128,128)\";\n        ctx.moveTo(xmin, y0); ctx.lineTo(w, y0);  // X axis\n        ctx.moveTo(x0, 0); ctx.lineTo(x0, h);  // Y axis\n        ctx.stroke();\n    }\n\n    componentDidMount() {\n        this.draw()\n    }\n\n    componentDidUpdate() {\n        this.draw()\n    }\n    \n    render() {\n        return (\n            <div className=\"FourierGraph\">\n                <label>Fourier Transform</label>\n                <canvas id=\"fourierCanvas\" width=\"1200\" height=\"300\"></canvas>\n            </div>\n        )\n    }\n}\n\nexport default FourierGraph","import React from \"react\"\nimport InputBar from './InputBar'\nimport DataGraph from './DataGraph'\nimport FourierGraph from \"./FourierGraph\"\n\nclass MainContent extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            inputFunction: (x) => {return Math.sin(2 * Math.PI * x) + Math.sin(2 * Math.PI * 2 * x) + Math.sin(2 * Math.PI * 3 * x)},\n            fourierFrequencies: [],\n            fourierData: []\n        }\n        this.setSignalFunction = this.setSignalFunction.bind(this)\n        this.computeFourier = this.computeFourier.bind(this)\n    }\n\n    setSignalFunction(f1, f2, f3) {\n        this.setState({\n            inputFunction: (x) => {return Math.sin(2 * Math.PI * f1 * x) + Math.sin(2 * Math.PI * f2 * x) + Math.sin(2 * Math.PI * f3 * x)}\n        }, this.computeFourier)\n    }\n\n    computeFourier() {\n        let f1 = 0\n        let f2 = 8\n        let frequencyStep = 0.01\n        let t1 = 0\n        let t2 = 5\n        let timeStep = 0.05\n        let fourierFrequencies = []\n        let fourierData = []\n        let Complex = require('complex.js')\n        for (let f = f1; f < f2; f += frequencyStep) {\n            fourierFrequencies.push(f)\n            let presence = 0\n            for (let t = t1; t < t2; t += timeStep) {\n                let multiplier = (Complex(\"-2 + 0i\").mul(Complex.PI).mul(Complex.I).mul(Complex(f, 0)).mul(Complex(t, 0))).exp().im * timeStep\n                presence += -this.state.inputFunction(t) * multiplier\n            }\n            fourierData.push(presence)\n        }\n        this.setState({\n            fourierFrequencies: fourierFrequencies,\n            fourierData: fourierData\n        })\n    }\n\n    componentDidMount() {\n        this.computeFourier()\n    }\n\n    render() {\n        return (\n            <div className=\"MainContent\">\n                <InputBar\n                    setSignalFunction={this.setSignalFunction}\n                />\n                <DataGraph\n                    id={1}\n                    title=\"Input Signal\"\n                    function={this.state.inputFunction}\n                />\n                <FourierGraph\n                    fourierFrequencies={this.state.fourierFrequencies}\n                    fourierData={this.state.fourierData}\n                />\n            </div>\n        )\n    }\n}\n\nexport default MainContent","import './App.css'\nimport MainContent from './components/MainContent'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainContent/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}